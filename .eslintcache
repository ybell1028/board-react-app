[{"C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\App.js":"3","C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\customAxios.js":"4","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\index.js":"5","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\App.js":"6","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\reportWebVitals.js":"7","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\customAxios.js":"8","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\user\\UserListComponent.jsx":"9","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\ApiService.js":"10","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\route\\RouterComponent.jsx":"11","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\user\\AddUserComponent.jsx":"12","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\user\\EditUserComponent.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1872,"mtime":1611144876046,"results":"17","hashOfConfig":"15"},{"size":634,"mtime":1611129739126,"results":"18","hashOfConfig":"15"},{"size":816,"mtime":1611738709129,"results":"19","hashOfConfig":"20"},{"size":1905,"mtime":1611744292597,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":634,"mtime":1611129739126,"results":"23","hashOfConfig":"20"},{"size":5187,"mtime":1611745901162,"results":"24","hashOfConfig":"20"},{"size":598,"mtime":1611739372780,"results":"25","hashOfConfig":"20"},{"size":1847,"mtime":1611744535418,"results":"26","hashOfConfig":"20"},{"size":4597,"mtime":1611741269578,"results":"27","hashOfConfig":"20"},{"size":3879,"mtime":1611743867928,"results":"28","hashOfConfig":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cfb9cb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1073bg6",{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},"C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\index.js",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\App.js",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-react-app\\src\\customAxios.js",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\index.js",[],["59","60"],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\App.js",["61","62","63","64","65","66","67"],"/* 루트(root) 컴포넌트라고 불리며, 이 파일에는 브라우저에서 실제로 렌더되는 컴포넌트들을 포함하고 있습니다.\nApp.js 파일은 JSX라는 확장자 파일을 리턴하는데, JSX는 자바스크립트를 확장한 문법입니다. \n'$' 표시가 없는 jsp 파일과 유사하다 할까요. HTML에서 클래스 속성은 <... class=\"\" > 이렇게\n'class'라고 적고 큰따옴표에 클래스 이름을 주었습니다. \n반면 JSX에서 클래스 속성을 주기 위해선 class라고 적는 것이 아닌 className이라고 적어야 합니다. \nclassName에서 N은 소문자가 아닌 대문자로 적어야 합니다. */\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./component/route/RouterComponent\";\nimport customAxios from \"./customAxios\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n    return (\n        <div>\n            <AppRouter />\n        </div>\n    );\n    function Home() {\n        // IP 주소 변수 선언\n        const [ip, setIP] = useState(\"\");\n\n        // IP 주소 값 설정\n        function callback(data) {\n            setIP(data);\n        }\n\n        // 펏번째 렌더링은 다 마친 후 실행\n        useEffect(() => {\n            // 클라이언트의 IP주소를 알아내는 백엔드의 함수를 호출합니다.\n            customAxios(\"/ip\", callback);\n        }, []);\n\n        return <header className=\"App-header\">이 기기의 IP주소는 {ip}입니다.</header>;\n    }\n\n    function About() {\n        return (\n            <div>\n                <hr />\n                <h2>소개 페이지</h2>\n            </div>\n        );\n    }\n\n    function Users() {\n        return (\n            <div>\n                <hr />\n                <h2>사용자 페이지</h2>\n            </div>\n        );\n    }\n}\nexport default App;\n","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\customAxios.js",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\user\\UserListComponent.jsx",["68"],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\ApiService.js",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\route\\RouterComponent.jsx",[],"C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\user\\AddUserComponent.jsx",["69"],"/* . 먼저 입력받을 유저 정보를 state에 작성합니다. 어떤 정보를 작성받을지 지난글 List컴포넌트에서 작성했네요.\r\n그리고 input태그에 이 정보들을 입력받게 하는데, 각 input태그마다 onChange()를 두어 실시간으로 \r\nsetState를 통해 state값을 저장하게 합니다. 다 입력 후 \"Save\" 버튼을 누르면 API통신을 통해 \r\nDB에 저장하도록 할 겁니다. */\r\n\r\nimport React, { Component } from \"react\";\r\nimport ApiService from \"../../ApiService\";\r\n\r\nclass AddUserComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            age: \"\",\r\n            salary: \"\",\r\n            message: null,\r\n        };\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    saveUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            age: this.state.age,\r\n            salary: this.state.salary,\r\n        };\r\n\r\n        ApiService.addUser(user)\r\n            .then((res) => {\r\n                this.setState({\r\n                    message: user.username + \"님이 성공적으로 등록되었습니다.\",\r\n                });\r\n                console.log(this.state.message);\r\n                this.props.history.push(\"/users\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"saveUser() 에러\", err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Add User</h2>\r\n                <form>\r\n                    <div>\r\n                        <label>User Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"please input your username\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"please input your password\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>First Name:</label>\r\n                        <input\r\n                            placeholder=\"please input your first name\"\r\n                            name=\"firstName\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Last Name:</label>\r\n                        <input\r\n                            placeholder=\"please input your last name\"\r\n                            name=\"lastName\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Age:</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"please input your age\"\r\n                            name=\"age\"\r\n                            value={this.state.age}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Salary:</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"please input your salary\"\r\n                            name=\"salary\"\r\n                            value={this.state.salary}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <button onClick={this.saveUser}>Save</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddUserComponent.propTypes = {};\r\n\r\nexport default AddUserComponent;\r\n","C:\\Users\\Admin\\Documents\\My_GitHub\\board-spring-boot\\board-react-app\\src\\component\\user\\EditUserComponent.jsx",["70"],"/* Edit 컴포넌트는 이전글에서 작성한 Add 컴포넌트와 상당히 유사합니다. \r\n여기에서도 CompoentDidMount()를 사용해 유저정보를 API통신을 통해 DB에서 불러옵니다.*/\r\n\r\nimport React, { Component } from \"react\";\r\nimport ApiService from \"../../ApiService\";\r\n\r\nclass EditUserComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            username: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            age: \"\",\r\n            salary: \"\",\r\n            message: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser();\r\n    }\r\n\r\n    loadUser = () => {\r\n        ApiService.fetchUserByID(window.localStorage.getItem(\"userID\"))\r\n            .then((res) => {\r\n                let user = res.data;\r\n                this.setState({\r\n                    id: user.id,\r\n                    username: user.username,\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    age: user.age,\r\n                    salary: user.salary,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"loadUser() 에러\", err);\r\n            });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    saveUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = {\r\n            id: this.state.id,\r\n            username: this.state.username,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            age: this.state.age,\r\n            salary: this.state.salary,\r\n        };\r\n\r\n        ApiService.editUser(user)\r\n            .then((res) => {\r\n                this.setState({\r\n                    message: user.username + \"님의 정보가 수정되었습니다.\",\r\n                });\r\n                console.log(this.state.message);\r\n                this.props.history.push(\"/users\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"saveUser() 에러\", err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Edit User</h2>\r\n                <form>\r\n                    <div>\r\n                        <label>User Name:</label>\r\n                        <input type=\"text\" name=\"username\" readOnly=\"true\" defaultValue={this.state.username} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>First Name:</label>\r\n                        <input placeholder=\"Edit your first name\" name=\"firstName\" value={this.state.firstName} onChange={this.onChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Last Name:</label>\r\n                        <input placeholder=\"Edit your last name\" name=\"lastName\" value={this.state.lastName} onChange={this.onChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Age:</label>\r\n                        <input type=\"number\" placeholder=\"Edit your age\" name=\"age\" value={this.state.age} onChange={this.onChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label>Salary:</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Edit your salary\"\r\n                            name=\"salary\"\r\n                            value={this.state.salary}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <button onClick={this.saveUser}>Save</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEditUserComponent.propTypes = {};\r\n\r\nexport default EditUserComponent;\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":12,"column":27,"nodeType":"77","messageId":"78","endLine":12,"endColumn":33},{"ruleId":"75","severity":1,"message":"79","line":12,"column":35,"nodeType":"77","messageId":"78","endLine":12,"endColumn":41},{"ruleId":"75","severity":1,"message":"80","line":12,"column":43,"nodeType":"77","messageId":"78","endLine":12,"endColumn":48},{"ruleId":"75","severity":1,"message":"81","line":12,"column":50,"nodeType":"77","messageId":"78","endLine":12,"endColumn":54},{"ruleId":"75","severity":1,"message":"82","line":19,"column":14,"nodeType":"77","messageId":"78","endLine":19,"endColumn":18},{"ruleId":"75","severity":1,"message":"83","line":37,"column":14,"nodeType":"77","messageId":"78","endLine":37,"endColumn":19},{"ruleId":"75","severity":1,"message":"84","line":46,"column":14,"nodeType":"77","messageId":"78","endLine":46,"endColumn":19},{"ruleId":"75","severity":1,"message":"85","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"85","line":6,"column":17,"nodeType":"77","messageId":"78","endLine":6,"endColumn":26},{"ruleId":"75","severity":1,"message":"85","line":4,"column":17,"nodeType":"77","messageId":"78","endLine":4,"endColumn":26},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'About' is defined but never used.","'Users' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]